name: PR Sanity Review

on: [pull_request]

jobs:
  label-pull-request-with-size:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Calculate PR size and label
        run: |
          #!/bin/bash
          # Patterns to ignore
          IGNORE_PATTERNS=("*.lock" "*.csv" "*.yaml" "*.txt")

          # Function to check if a file matches any ignored patterns
          matches_ignore_pattern() {
            for pattern in "${IGNORE_PATTERNS[@]}"; do
              if [[ $1 == $pattern ]]; then
                return 0
              fi
            done
            return 1
          }

          # Initialize line count
          total_lines=0

          # List all files in PR and calculate size for non-ignored ones
          for file in $(git diff --name-only ${{ github.event.before }} ${{ github.event.after }}); do
            if ! matches_ignore_pattern "$file"; then
              if [ -f "$file" ]; then
                lines=$(wc -l < "$file")
                total_lines=$((total_lines + lines))
              fi
            fi
          done

          echo "Total lines in PR (excluding ignored patterns): $total_lines"

          # Determine the size label based on total lines
          SIZE_LABEL="feat XS"
          if [ "$total_lines" -le 100 ]; then
            SIZE_LABEL="feat XS"
          elif [ "$total_lines" -le 300 ]; then
            SIZE_LABEL="feat S"
          elif [ "$total_lines" -le 900 ]; then
            SIZE_LABEL="feat M"
          elif [ "$total_lines" -le 1800 ]; then
            SIZE_LABEL="feat L"
          else
            SIZE_LABEL="feat XL"
          fi

          # Output the size label to an environment file
          echo "Setting PR size label to: $SIZE_LABEL"
          echo "SIZE_LABEL=$SIZE_LABEL" >> $GITHUB_ENV
      - name: Add size label to PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const sizeLabel = process.env.SIZE_LABEL;
            const prNumber = context.payload.pull_request.number;
            const repoName = context.repo.repo;
            const owner = context.repo.owner;
            // Add the label to the PR
            await github.rest.issues.addLabels({
              owner: owner,
              repo: repoName,
              issue_number: prNumber,
              labels: [sizeLabel]
            });
        env:
          SIZE_LABEL: ${{ env.SIZE_LABEL }}



  sanity-checks:
    runs-on: ubuntu-latest
    needs: label-pull-request-with-size
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check for large python file changes
        run: |
          #!/bin/bash
          # Set the maximum number of allowed lines changed for a .py file
          MAX_DIFF_SIZE=1000

          # Get the base and head commits for the pull request
          BASE_SHA=$(jq --raw-output .pull_request.base.sha $GITHUB_EVENT_PATH)
          HEAD_SHA=$(jq --raw-output .pull_request.head.sha $GITHUB_EVENT_PATH)

          # Check each .py file in the commit range for the number of lines changed
          git diff --numstat $BASE_SHA $HEAD_SHA -- '*.py' | while read adds deletes file; do
            # Sum adds and deletes to get the total number of lines changed
            total_changes=$((adds + deletes))
            echo "$file has $total_changes lines changed."

            # If the total changes exceed the maximum allowed, fail the check
            if [ "$total_changes" -gt "$MAX_DIFF_SIZE" ]; then
              echo "::error file=$file::File $file has too many lines changed ($total_changes lines)."
              echo "##[error]File $file has too many lines changed ($total_changes lines)."
              exit 1
            fi
          done
          echo "All modified .py files have an acceptable number of line changes."
        env:
          GITHUB_EVENT_PATH: ${{ github.event_path }}

